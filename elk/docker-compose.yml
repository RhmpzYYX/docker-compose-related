version: '3'
services:
  elk-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.1.1
    ports:
      - "9200:9200"
    restart: always
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch/logstash-template.json:/usr/share/elasticsearch/config/templates/logstash-template.json
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      backend:
        aliases:
          - elk-elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.1.1
    ports:
      - "5601:5601"
    restart: always
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      backend:
        aliases:
          - kibana
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elk-elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:7.1.1
    #    ports:
    #      - "4560:4560"
    restart: always
    environment:
      - LS_JAVA_OPTS=-Xmx512m -Xms512m
    volumes:
      - ./logstash/logstash.conf:/etc/logstash.conf
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./elasticsearch/logstash-template.json:/usr/share/logstash/config/logstash-template.json
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      backend:
        aliases:
          - logstash
    depends_on:
      - elk-elasticsearch
    entrypoint:
      - logstash
      - -f
      - /etc/logstash.conf

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.1.1
    restart: always
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /home/ybd/data/git-repo/bitbucket/central-city/cc-component/log4j2Logs:/log4j2Logs
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      backend:
        aliases:
          - filebeat

# docker network create -d=overlay --attachable backend
# docker network create --opt encrypted -d=overlay --attachable --subnet 10.10.0.0/16 backend
networks:
  backend:
    external:
      name: backend

